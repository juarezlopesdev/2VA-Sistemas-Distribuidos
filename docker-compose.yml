version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: biblioteca-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  books-service:
    build:
      context: ./books-service
      dockerfile: Dockerfile
    container_name: biblioteca-books-service
    ports:
      - "3002:3002"
    volumes:
      - ./books-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3002
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: biblioteca-api-gateway
    ports:
      - "3001:3001"
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BOOKS_SERVICE_URL=http://books-service:3002
    depends_on:
      redis:
        condition: service_healthy
      books-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: biblioteca-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
    depends_on:
      api-gateway:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
